/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lk.modernPOS.view;

import java.awt.HeadlessException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import lk.modernPOS.controller.ItemController;
import lk.modernPOS.controller.OrderController;
import lk.modernPOS.dto.OrderDTO;
import lk.modernPOS.dto.OrderDetailDTO;

/**
 *
 * @author Binath Perera
 */
public class ViewOrdersPannel extends javax.swing.JPanel {

    /**
     * Creates new form ManageOrdersPannel
     */
    public ViewOrdersPannel() {
        
            initComponents();        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        orderTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        deleteButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        orderIdText = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        orderDateText = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        cusIdText = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        orderDetailsTable = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setLayout(null);

        jPanel1.setLayout(null);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel5.setText("Select an Order");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(120, 0, 130, 40);

        orderTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Oder Id", "Date", "Customer Id"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        orderTable.getTableHeader().setReorderingAllowed(false);
        orderTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                orderTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(orderTable);

        jPanel1.add(jScrollPane3);
        jScrollPane3.setBounds(30, 50, 310, 110);

        add(jPanel1);
        jPanel1.setBounds(190, 80, 370, 190);

        jLabel1.setFont(new java.awt.Font("Traditional Arabic", 1, 36)); // NOI18N
        jLabel1.setText("View Orders");
        add(jLabel1);
        jLabel1.setBounds(270, 10, 209, 47);
        add(jSeparator1);
        jSeparator1.setBounds(0, 280, 833, 10);

        deleteButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        deleteButton.setText("Delete Order");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });
        add(deleteButton);
        deleteButton.setBounds(581, 220, 130, 50);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("Order ID");
        add(jLabel4);
        jLabel4.setBounds(100, 320, 80, 22);

        orderIdText.setEditable(false);
        add(orderIdText);
        orderIdText.setBounds(100, 350, 108, 30);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Order date");
        add(jLabel2);
        jLabel2.setBounds(310, 310, 97, 29);

        orderDateText.setEditable(false);
        add(orderDateText);
        orderDateText.setBounds(310, 350, 108, 30);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Customer Id");
        add(jLabel3);
        jLabel3.setBounds(540, 310, 112, 29);

        cusIdText.setEditable(false);
        add(cusIdText);
        cusIdText.setBounds(540, 350, 90, 30);

        orderDetailsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Item code", "Item name", "Quantity", "Unit Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        orderDetailsTable.setRowHeight(20);
        orderDetailsTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(orderDetailsTable);

        add(jScrollPane1);
        jScrollPane1.setBounds(30, 400, 680, 230);

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lk/modernPOS/images/view order down.jpg"))); // NOI18N
        add(jLabel8);
        jLabel8.setBounds(10, 300, 720, 360);

        backButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        add(backButton);
        backButton.setBounds(20, 10, 100, 40);

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lk/modernPOS/images/view order background.jpg"))); // NOI18N
        add(jLabel7);
        jLabel7.setBounds(1, 0, 970, 700);
        add(jLabel6);
        jLabel6.setBounds(100, 80, 350, 190);
    }// </editor-fold>//GEN-END:initComponents

    private void orderTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_orderTableMouseClicked
        int selectedRow = orderTable.getSelectedRow();
        orderIdText.setText(String.valueOf(orderTable.getValueAt(selectedRow, 0)));
        orderDateText.setText(String.valueOf(orderTable.getValueAt(selectedRow, 1)));
        cusIdText.setText(String.valueOf(orderTable.getValueAt(selectedRow, 2)));
        try {
            ArrayList<OrderDetailDTO> ar = new OrderController().getAllOrdersDetailsForOrder(String.valueOf(orderTable.getValueAt(selectedRow, 0)));
            DefaultTableModel dtm=(DefaultTableModel)orderDetailsTable.getModel();
            dtm.setRowCount(0);
            for (OrderDetailDTO od:ar) {
                dtm.addRow(new Object[]{od.getItemCode(),new ItemController().searchItem(od.getItemCode()).getDescription(),od.getQty(),od.getUnitPrice()});
            }

        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(ViewOrdersPannel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_orderTableMouseClicked

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        if(orderIdText.getText().trim().equals("")){
            JOptionPane.showMessageDialog(this, "Please select an order to delete");
            return;
        }
        int confirm = JOptionPane.showConfirmDialog(this, "Are you sure to delete this order ? ");
        if(confirm!=0){
            return;
        }
        try {
            boolean stat = new OrderController().deleteOrder(orderIdText.getText());
            if(stat){
                JOptionPane.showMessageDialog(this, "Order Deleted");
            }else{
                JOptionPane.showMessageDialog(this, "Delete failiure");
            }
            loadAllOrders();
            DefaultTableModel dtm=(DefaultTableModel) orderDetailsTable.getModel();
            orderDateText.setText("");
            orderIdText.setText("");
            cusIdText.setText("");
            dtm.setNumRows(0);
        } catch (ClassNotFoundException | SQLException | HeadlessException ex) {
            Logger.getLogger(ViewOrdersPannel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        MainFrame.getMp().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_backButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JTextField cusIdText;
    private javax.swing.JButton deleteButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField orderDateText;
    private javax.swing.JTable orderDetailsTable;
    private javax.swing.JTextField orderIdText;
    private javax.swing.JTable orderTable;
    // End of variables declaration//GEN-END:variables

    private void loadAllOrders() {
        
        try {
            ArrayList<OrderDTO> ar = new OrderController().getAllOrders();
            DefaultTableModel dtm=(DefaultTableModel) orderTable.getModel();
            dtm.setRowCount(0);
            for(OrderDTO od:ar){
                dtm.addRow(new Object[]{od.getId(),od.getDate(),od.getCustomerId()});
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(ViewOrdersPannel.class.getName()).log(Level.SEVERE, null, ex);
        }
   
    }

    public void initialise() {
        try{
            loadAllOrders();
        }catch(NullPointerException e){
            JOptionPane.showMessageDialog(this, "Please check your connection properties");
            MainFrame.getMp().setVisible(true);
            return;
        }
        this.setVisible(true);
        MainFrame.getMp().setVisible(false);
    }
}
