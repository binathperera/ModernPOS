/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lk.modernPOS.view;

import java.awt.HeadlessException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import lk.modernPOS.controller.CustomerController;
import lk.modernPOS.dto.CustomerDTO;

/**
 *
 * @author Binath Perera
 */
public class ManageCustomersPannel extends javax.swing.JPanel {

    /**
     * Creates new form ManageCustomerPannel
     */
    public ManageCustomersPannel() {
        
            initComponents();  
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        headerLabel = new javax.swing.JLabel();
        nameText = new javax.swing.JTextField();
        addressText = new javax.swing.JTextField();
        salaryText = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator1 = new javax.swing.JSeparator();
        labelPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        customerTable = new javax.swing.JTable();
        customerIdText = new javax.swing.JTextField();
        buttonPannel1 = new javax.swing.JPanel();
        updateCustomerButton = new javax.swing.JButton();
        deleteCustomerButton = new javax.swing.JButton();
        addNewCustomerLabel = new javax.swing.JLabel();
        buttonPannel2 = new javax.swing.JPanel();
        AddCustomerButton = new javax.swing.JButton();
        innerBackgroundLabel = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();
        outerBackgroundLabel = new javax.swing.JLabel();

        setLayout(null);

        headerLabel.setFont(new java.awt.Font("Tempus Sans ITC", 1, 36)); // NOI18N
        headerLabel.setForeground(new java.awt.Color(255, 0, 0));
        headerLabel.setText("Manage Customer Form");
        add(headerLabel);
        headerLabel.setBounds(190, 10, 414, 48);

        nameText.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        add(nameText);
        nameText.setBounds(170, 150, 230, 40);

        addressText.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        add(addressText);
        addressText.setBounds(170, 210, 230, 40);

        salaryText.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        salaryText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salaryTextActionPerformed(evt);
            }
        });
        add(salaryText);
        salaryText.setBounds(170, 270, 130, 40);
        add(jSeparator2);
        jSeparator2.setBounds(0, 60, 740, 10);
        add(jSeparator1);
        jSeparator1.setBounds(-10, 340, 760, 10);

        labelPanel.setLayout(null);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("  Cus ID");
        labelPanel.add(jLabel2);
        jLabel2.setBounds(0, 20, 90, 22);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setText("Salary");
        labelPanel.add(jLabel5);
        jLabel5.setBounds(10, 200, 70, 30);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Name");
        labelPanel.add(jLabel3);
        jLabel3.setBounds(10, 80, 60, 22);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("Address");
        labelPanel.add(jLabel4);
        jLabel4.setBounds(10, 140, 80, 22);
        labelPanel.add(jLabel7);
        jLabel7.setBounds(-10, 0, 110, 230);

        add(labelPanel);
        labelPanel.setBounds(60, 80, 90, 230);

        customerTable.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(0, 0, 0)));
        customerTable.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        customerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Id", "Name", "Address", "Salary"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        customerTable.setRowHeight(30);
        customerTable.getTableHeader().setReorderingAllowed(false);
        customerTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                customerTableMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                customerTableMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(customerTable);

        add(jScrollPane1);
        jScrollPane1.setBounds(30, 350, 690, 270);

        customerIdText.setEditable(false);
        customerIdText.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        add(customerIdText);
        customerIdText.setBounds(170, 86, 120, 40);

        buttonPannel1.setLayout(null);

        updateCustomerButton.setText("Update");
        updateCustomerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateCustomerButtonActionPerformed(evt);
            }
        });
        buttonPannel1.add(updateCustomerButton);
        updateCustomerButton.setBounds(60, 10, 90, 40);

        deleteCustomerButton.setText("Delete");
        deleteCustomerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteCustomerButtonActionPerformed(evt);
            }
        });
        buttonPannel1.add(deleteCustomerButton);
        deleteCustomerButton.setBounds(60, 60, 90, 40);

        addNewCustomerLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        addNewCustomerLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lk/modernPOS/icons/add.png"))); // NOI18N
        addNewCustomerLabel.setText("New Customer");
        addNewCustomerLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                addNewCustomerLabelMousePressed(evt);
            }
        });
        buttonPannel1.add(addNewCustomerLabel);
        addNewCustomerLabel.setBounds(40, 110, 150, 25);

        add(buttonPannel1);
        buttonPannel1.setBounds(500, 190, 210, 150);

        AddCustomerButton.setText("Add Customer");
        AddCustomerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddCustomerButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout buttonPannel2Layout = new javax.swing.GroupLayout(buttonPannel2);
        buttonPannel2.setLayout(buttonPannel2Layout);
        buttonPannel2Layout.setHorizontalGroup(
            buttonPannel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, buttonPannel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(AddCustomerButton, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                .addContainerGap())
        );
        buttonPannel2Layout.setVerticalGroup(
            buttonPannel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonPannel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(AddCustomerButton, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                .addContainerGap())
        );

        add(buttonPannel2);
        buttonPannel2.setBounds(500, 120, 140, 60);

        innerBackgroundLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lk/modernPOS/images/ManageCustomer backgound.jpg"))); // NOI18N
        add(innerBackgroundLabel);
        innerBackgroundLabel.setBounds(0, 40, 720, 420);

        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        add(backButton);
        backButton.setBounds(20, 10, 80, 30);

        outerBackgroundLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lk/modernPOS/images/white background.jpg"))); // NOI18N
        add(outerBackgroundLabel);
        outerBackgroundLabel.setBounds(0, 0, 750, 690);
    }// </editor-fold>//GEN-END:initComponents
    
    private void salaryTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salaryTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_salaryTextActionPerformed

    private void updateCustomerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateCustomerButtonActionPerformed
        if(customerIdText.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Please select a customer to update .");
            return;
        }
        boolean validateFields = validateFields();
        if(validateFields==false)return;
        int con = JOptionPane.showConfirmDialog(this, "Update this customer "+nameText.getText()+" with this information Provided?","Customer updation",1);
        if(con!=0){return;}
        try {
            boolean a=new CustomerController().updateCustomer(new CustomerDTO(String.valueOf(customerIdText.getText())
                ,nameText.getText(),addressText.getText(),Double.parseDouble(salaryText.getText())));
            if(a){
                loadAllCustomers();
                JOptionPane.showMessageDialog(this,"Customer updated");
            }else{
                JOptionPane.showMessageDialog(this, "Update faliure !");
            }
        } catch (ClassNotFoundException | SQLException | NumberFormatException | HeadlessException ex) {
            Logger.getLogger(ManageCustomersPannel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_updateCustomerButtonActionPerformed

    private void deleteCustomerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteCustomerButtonActionPerformed
        if(customerIdText.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Please select a customer to delete .");
            return;
        }
        int scd = JOptionPane.showConfirmDialog(this,"Delete customer "+customerIdText.getText()+" ???");
        if(scd==0){
            try {
                boolean a=new CustomerController().deleteCustomer(customerIdText.getText());
                if(a){
                    loadAllCustomers();
                    customerIdText.setText(null);
                    nameText.setText(null);
                    addressText.setText(null);
                    salaryText.setText(null);
                    JOptionPane.showMessageDialog(this,"Customer deleted");
                }else{
                    JOptionPane.showMessageDialog(this, "Delete faliure !");
                }
            } catch (Exception ex) {
                Logger.getLogger(ManageCustomersPannel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_deleteCustomerButtonActionPerformed

    private void customerTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customerTableMouseClicked

    }//GEN-LAST:event_customerTableMouseClicked

    private void customerTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customerTableMousePressed
        if(buttonPannel2.isVisible()){
            customerIdText.setEditable(false);
            buttonPannel2.setVisible(false);
            buttonPannel1.setVisible(true);
        }
        int selectedRow = customerTable.getSelectedRow();
        DefaultTableModel dtm=(DefaultTableModel) customerTable.getModel();
        customerIdText.setText(String.valueOf(dtm.getValueAt(selectedRow, 0)));
        nameText.setText(String.valueOf(dtm.getValueAt(selectedRow, 1)));
        addressText.setText(String.valueOf(dtm.getValueAt(selectedRow, 2)));
        salaryText.setText(String.valueOf(dtm.getValueAt(selectedRow, 3)));
    }//GEN-LAST:event_customerTableMousePressed

    private void addNewCustomerLabelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addNewCustomerLabelMousePressed
        clearAllFields();
        customerIdText.setText(generateId());
        customerIdText.setEditable(true);
        buttonPannel1.setVisible(false);
        buttonPannel2.setVisible(true);
        nameText.requestFocus();
    }//GEN-LAST:event_addNewCustomerLabelMousePressed

    private void AddCustomerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddCustomerButtonActionPerformed
        
        try {
            if(validateId(customerIdText.getText())==false){
                    JOptionPane.showMessageDialog(this, "There is already a customer with this Id.\n It is recomended to assign the Id given by the system.");
                    customerIdText.setText(generateId());
                    return;
            }
            if(validateFields()==false){return;}
            int con = JOptionPane.showConfirmDialog(this, "Add this customer into the list ?", "Add new customer confirmation. ", 1);
            if(con!=0){return;}
            boolean addCustomer = new CustomerController().addCustomer(new CustomerDTO(customerIdText.getText(), nameText.getText(),addressText.getText(),Double.parseDouble(salaryText.getText())));
            if(addCustomer){
                JOptionPane.showMessageDialog(this, "Customer Successfully added!");
                loadAllCustomers();
            }else{
                JOptionPane.showMessageDialog(this, "Customer Could not be added added!");
            }

            clearAllFields();
            customerIdText.setText(generateId());
            nameText.requestFocus();
            nameText.selectAll();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ManageCustomersPannel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(ManageCustomersPannel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_AddCustomerButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        MainFrame.getMp().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_backButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddCustomerButton;
    private javax.swing.JLabel addNewCustomerLabel;
    private javax.swing.JTextField addressText;
    private javax.swing.JButton backButton;
    private javax.swing.JPanel buttonPannel1;
    private javax.swing.JPanel buttonPannel2;
    private javax.swing.JTextField customerIdText;
    private javax.swing.JTable customerTable;
    private javax.swing.JButton deleteCustomerButton;
    private javax.swing.JLabel headerLabel;
    private javax.swing.JLabel innerBackgroundLabel;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JPanel labelPanel;
    private javax.swing.JTextField nameText;
    private javax.swing.JLabel outerBackgroundLabel;
    private javax.swing.JTextField salaryText;
    private javax.swing.JButton updateCustomerButton;
    // End of variables declaration//GEN-END:variables

    private void loadAllCustomers() {
        try {
            ArrayList<CustomerDTO> allCustomers = new CustomerController().getAllCustomers();
            DefaultTableModel dtm=(DefaultTableModel) customerTable.getModel();
            dtm.setRowCount(0);
            for(CustomerDTO cus:allCustomers){
                Object []rowData={cus.getId(),cus.getName(),cus.getAddress(),cus.getSalary()};
                dtm.addRow(rowData);
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ManageCustomersPannel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(ManageCustomersPannel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private String generateId() {
            
        Random r=new Random();
        while(true){
            int num=r.nextInt(1000);
            String a=String.format("%c%03d",(char)r.nextInt(26)+65,num);
            boolean stat=validateId(a);
            if(stat){
                return a;
            }
        }
    }

    private void clearAllFields() {
        customerIdText.setText("");
        nameText.setText("");
        addressText.setText("");
        salaryText.setText("");
    }

    private boolean validateId(String id) {
        try {
            String[] allCustomerIds = new CustomerController().getAllCustomerIds();
            for(String i:allCustomerIds){
                if(id.equals(i)){
                    return false;
                }
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ManageCustomersPannel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(ManageCustomersPannel.class.getName()).log(Level.SEVERE, null, ex);
        }
        return true;
    }

    private boolean validateFields() {
        String name=nameText.getText().trim();
        String address=addressText.getText().trim();
        String salary=salaryText.getText().trim();
        
        if(name.equals("")){
            JOptionPane.showMessageDialog(this, "Please enter the customer's name");
            nameText.requestFocus();
            return false;

        }
        if(address.equals("")){
            JOptionPane.showMessageDialog(this, "Please enter the address");
            addressText.requestFocus();
            return false;
        }
        if(salary.equals("")){
            JOptionPane.showMessageDialog(this, "Please enter the customer's salary!");
            salaryText.requestFocus();
            return false;
        }
        double testSalary;
        try{
            testSalary=Double.parseDouble(salary);
        }catch(NumberFormatException e){
            JOptionPane.showMessageDialog(this, "Please enter a valid salary containing numbers");
            salaryText.requestFocus();
            salaryText.selectAll();
            return false;
        }
        return true;
    }

    public void initialise() {
        try{
            loadAllCustomers();
        }catch(NullPointerException e){
            JOptionPane.showMessageDialog(this, "Please check your connection properties");
            MainFrame.getMp().setVisible(true);
            return;
        }
        this.setVisible(true);
        MainFrame.getMp().setVisible(false);
        buttonPannel1.setVisible(true);
        buttonPannel2.setVisible(false);
        customerIdText.setEditable(false);
        customerIdText.setText("");
    }
}
